// Generated by CoffeeScript 1.9.3
(function() {
  var _, databaseName, db, dbConnectionString, findAllWellsContainingBatchId, findAllWellsContainingBatchId1, mongoPort, mongojs;

  _ = require('lodash');

  mongojs = require('mongojs');

  mongoPort = 27017;

  databaseName = "plateRegistration";

  dbConnectionString = process.env.DOCKER_HOST_IP + ":" + mongoPort + "/" + databaseName;

  console.log("dbConnectionString");

  console.log(dbConnectionString);

  db = mongojs(dbConnectionString, ['plates', 'wells']);

  findAllWellsContainingBatchId = function(batchId, callback) {
    console.time('search');
    return db.plates.find({
      "wells.lsStates.lsValues": {
        $elemMatch: {
          lsKind: "batch code",
          codeValue: batchId
        }
      }
    }, {
      "wells.$": 1,
      "codeName": 1
    }, function(err, docs) {
      if (err) {
        console.error("the following error occurred:");
        console.log(err);
        return callback(err, null);
      } else {
        console.timeEnd('search');
        return callback(null, docs);
      }
    });
  };

  findAllWellsContainingBatchId1 = function(batchId, callback) {
    console.time('search');
    return db.plates.find({
      "wells.lsStates.lsValues.codeValue": batchId
    }, {
      "wells.$": 1,
      "codeName": 1
    }, function(err, docs) {
      if (err) {
        console.error("the following error occurred:");
        console.log(err);
        return callback(err, null);
      } else {
        console.timeEnd('search');
        return callback(null, docs);
      }
    });
  };

  findAllWellsContainingBatchId("DNS3::1", function(err, docs) {
    if (!err) {
      _.each(docs, function(doc) {
        console.log("number of wells returned: " + (_.size(doc.wells)));
        return _.each(doc.wells, function(well) {
          console.log("well code name: " + well.codeName);
          return _.each(well.lsStates, function(lsState) {
            return _.each(lsState.lsValues, function(lsValue) {
              if (lsValue.lsKind === "batch code") {
                return true;
              }
            });
          });
        });
      });
      return console.log("found " + (_.size(docs)) + " plates with wells containing " + "DNS3::1" + "  1");
    }
  });

}).call(this);
