client.deploymode=${env.DNSDeployMode}
client.authentication.user.type=DNS
client.host=${conf.hostname}
client.include.project=TRUE
client.path=
client.port=${conf.acas.node.port}
client.use.ssl=false
client.service.persistence.host=${client.host}
client.service.persistence.path=acas
client.service.persistence.port=8080
client.service.persistence.fullpath=http://${client.host}:${client.service.persistence.port}/${client.service.persistence.path}/
client.service.r.host=${client.host}
client.service.r.path=r-services-api
client.service.r.port=80
client.service.result.viewer.experiment.parameter=AssayProtocol
client.service.result.viewer.host=dsandsrt03
client.service.result.viewer.path=/seurat/runseurat?cmd=newjob
client.service.result.viewer.port=9080
client.service.result.viewer.protocol.parameter=AssayName
client.service.rapache.host=${client.host}
client.service.rapache.port=80
client.service.rapache.path=r-services-api
client.service.rapache.fullpath=http://${client.service.rapache.host}:${client.service.rapache.port}/${client.service.rapache.path}/
client.service.rshiny.host=${client.host}
client.service.rshiny.path=
client.service.rshiny.port=3838
client.service.rshiny.fullpath=http://${client.service.rshiny.host}:${client.service.rshiny.port}/${client.service.rshiny.path}
server.allow.protocol.creation.formats=
server.database.driver=${conf.acas.jdbc.driverClassName}
server.database.hibernate.dialect=org.hibernate.dialect.Oracle11gDialect
server.database.host=${conf.acas.api.db.host}
server.database.name=${conf.acas.api.db.name}
server.database.password=${conf.acas.jdbc.password}
server.database.port=${conf.acas.api.db.port}
server.database.r.driver=Oracle()
server.database.r.package=ROracle
server.database.username=${conf.acas.jdbc.username}
server.database.url=${conf.acas.api.db.location}${server.database.host}:${server.database.port}:${server.database.name}
server.delete.files.on.reload=false
server.enablespecrunner=${conf.enableSpecRunner}
server.log.level=INFO
server.log.path=${env.DNSLogDirectory}
server.projects.type=DNS
server.require.login=false
server.service.external.file.type=DNS
server.service.external.file.service.url=${conf.acas.api.externalFileServiceURL}
client.service.external.preferred.batchid.type=SingleBatchNameQueryString
server.service.external.preferred.batchid.url=${conf.acas.api.externalPreferredBatchIdServiceURL}
server.service.external.project.url=${conf.acas.api.projectsServiceURL}
server.service.external.report.registration.url=${conf.acas.api.reportRegistrationServiceURL}
server.service.external.user.authentication.url=${conf.acas.api.userAuthenticationServiceURL}
server.service.external.user.information.url=${conf.acas.api.personsServiceURL}
