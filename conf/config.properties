########################################################################
###          ACAS Configuration Properties    		                 ###
########################################################################


# How to read this file:
# SETTING-TYPE:
#	PLUMBING: Represents settings about Host names, ports, database names...etc
#  	BEHAVIOR: Represents settings that change the behavior of ACAS (Authentication, Allow protocol creation in SEL...etc.)
#  ON-THE-FLY:
#  	Settings marked as true in "ON-THE-FLY" do not require a server reboot
# OPTIONAL:
#	Settings marked as true in "OPTIONAL" are not required
# DEFAULT:
#	Optional Settings will have a default

# Note to developers adding new config values:
# The first part of the name, which is always "client" or "server", is used to filter which options are sent to
# the web client. Do not name config values starting with "client" unless they are safe for public viewing.
# To access a config variable from the client, e.g. client.deployMode then use window.conf.deployMode
# For the server, first config = require '../conf/compiled/conf.js'
# then, for server.rscript, use: config.all.server.rscript


# Migration notes
# ACAS 1.3 -> 1.5
# New required configuration additions with default values:
# client.datafiles.downloadurl.prefix=/dataFiles/
# client.roles.htsAdmin=admin
# client.browser.enableSearchAll=true
# New optional configuration additions:
# client.service.spotfire.host=${conf.acas.api.spotfire}
# client.service.spotfire.path=${conf.acas.api.spotfirepath}
# server.service.external.inventory.database.host=${conf.acas.api.inventory.database.host}
# server.service.external.inventory.database.port=${conf.acas.api.inventory.database.port}
# server.service.external.inventory.database.name=${conf.acas.api.inventory.database.name}
# server.service.external.inventory.database.username=${conf.acas.api.inventory.database.username}
# server.service.external.inventory.database.password=${conf.acas.api.inventory.database.password}

# Migration notes
# ACAS 1.2 -> 1.3
# name changes:
# client.require.getUserLink -> server.roologin.getUserLink
# client.require.changeLink -> server.roologin.changeLink
# client.require.resetLink -> server.roologin.resetLink
# client.require.loginLink -> server.roologin.loginLink
# New required configuration additions with default values
# client.roologin.showpasswordchange=false
# client.moduleMenus.summaryStats=true
# client.leavePageMessage=There are no unsaved changes.
# logging.usemongo=false
# logging.logtoconsole=true
# server.security.authstrategy=database
# client.service.control.tolerance.percentage=0.01
# New optional configuration additions
# client.moduleMenus.headerName=ACAS
# client.moduleMenus.homePageMessage=Welcome to ACAS
# client.moduleMenus.copyrightMessage=&copy; John McNeil & Company 2012-2015
# server.service.persistence.filePath=${ACAS_HOME}/${server.datafiles.relative_path}
# server.service.persistence.fileUrl=${server.nodeapi.path}/uploads
# client.service.result.viewer.experimentName.invalidCharacters
# New for some installs: client.service.result.viewer.experimentNameColumn=EXPERIMENT_NAME

# Migration notes
# ACAS 1.3 -> 1.4
# New required configuration additions with default values
# client.service.rapache.use.ssl=${client.use.ssl}


# Host that the client is running on.  It is recommended that you use the fully qualified domain name
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		FALSE
# DEFAULT:		NA
#
# Example: client.host=host4.labsynch.com
#
client.host=localhost

# Port that the client is running on.
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		FALSE
# DEFAULT:		NA
#
# Example: client.port=3000
#
client.port=3000

# If there are multiple instances running on a single server, it is recommended that each instances runs on a
# Different deploy mode
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		TRUE
# DEFAULT:		NA
#
# Example: client.deployMode=Dev
#
client.deployMode=Dev

# Settings for the logging service
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		TRUE
# DEFAULT:		NA
#
# Example: server.logging.database=acas_logging_Dev
#
logging.database=acas_logging_${client.deployMode}

# Settings for the logging service
# Specify if the winston logger should use mongodb to store logs.
# If this is false, logs will be saved to a flat file
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		TRUE
# DEFAULT:		NA
#
#
logging.usemongo=false

# Settings for the logging service
# Specify if the winston logger should use mongodb to store logs.
# If this is false, logs will be saved to a flat file
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		TRUE
# DEFAULT:		NA
#
#
logging.logtoconsole=true

# add options for using flat file instead of mongo
# printing out to console.log

#nodeapi.port must be different than client.port. It should be blocked by the server's firewall
server.nodeapi.port=3001
server.nodeapi.path=http://${client.host}:${server.nodeapi.port}

server.database.name=prod
server.database.username=acas
server.database.password=acas
server.log.level=DEBUG
client.service.persistence.path=acas/api/v1
client.service.rapache.port=1080
server.rapache.listen=localhost
server.log.path=/tmp

client.include.project=FALSE
client.path=
client.use.ssl=false
server.ssl.key.file.path=../certs/server.key
server.ssl.cert.file.path=../certs/server.crt
server.ssl.cert.authority.file.path=../certs/ca.crt
server.ssl.cert.passphrase=selfCertForACASServer
client.service.persistence.host=host4.labsynch.com
client.service.persistence.port=8080
client.service.persistence.fullpath=http://${client.service.persistence.host}:${client.service.persistence.port}/${client.service.persistence.path}/
client.service.rapache.use.ssl=${client.use.ssl}
client.service.result.viewer.protocolPrefix=http://${client.service.persistence.host}:9080/seurat/runseurat?cmd=newjob&AssayName=
client.service.result.viewer.experimentPrefix=&AssayProtocol=
client.service.result.viewer.experimentNameColumn=EXPERIMENT_NAME
client.service.result.viewer.experimentName.invalidCharacters="',
client.service.rapache.host=${client.host}
client.service.rapache.path=r-services-api
client.service.rapache.fullpath=http://${client.service.rapache.host}:${client.service.rapache.port}/${client.service.rapache.path}/
client.service.control.tolerance.percentage=0.01

# Required for Roo-based authentication and user information services. All used in CustomerSpecificFunctions.coffee
server.roologin.getUserLink=${client.service.persistence.fullpath}authors/findbyname
server.roologin.changeLink=http://${client.service.persistence.host}:${client.service.persistence.port}/acas/changepassword/update
server.roologin.resetLink=http://${client.service.persistence.host}:${client.service.persistence.port}/acas/forgotpassword/update
server.roologin.loginLink=http://${client.service.persistence.host}:${client.service.persistence.port}/acas/resources/j_spring_security_check
client.roologin.showpasswordchange=true

server.allow.protocol.creation.formats=Generic,Dose Response,Custom Example,Example2
server.database.driver=org.postgresql.Driver
server.database.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
server.database.host=${client.service.persistence.host}
server.database.port=5432
server.database.r.driver=PostgreSQL()
server.database.r.package=RPostgreSQL
server.database.url=jdbc:postgresql:${server.database.host}:${server.database.port}:${server.database.name}
server.delete.files.on.reload=false
server.projects.type=HardCoded
client.require.login=true
server.r.installation.path=
server.r=R
server.rscript=Rscript
server.service.external.file.type=blueimp
server.service.external.file.service.url=
# options for preferred batchid type are: SeuratCmpdReg, GeneCodeCheckByR, AcasCmpdReg, LabSynchCmpdReg, SingleBatchNameQueryString
client.service.external.preferred.batchid.type=LabSynchCmpdReg
server.service.external.preferred.batchid.url=http://host4.labsynch.com:8080/cmpdreg/metalots/corpName/
server.service.external.project.url=
server.service.external.report.registration.url=
server.service.external.user.authentication.url=
server.service.external.user.information.url=
server.service.external.logging.url=
client.service.rshiny.host=${client.service.persistence.host}
client.service.rshiny.path=fred
client.service.rshiny.port=3838
client.service.rshiny.fullpath=http://${client.service.rshiny.host}:${client.service.rshiny.port}/${client.service.rshiny.path}

# Required if using Spotfire
client.service.spotfire.host=dsantsptdxp
client.service.spotfire.path=/Lead Discovery/HTSWells

# Used by custom code for accessing inventory
server.service.external.inventory.database.host=
server.service.external.inventory.database.port=
server.service.external.inventory.database.name=
server.service.external.inventory.database.username=
server.service.external.inventory.database.password=


## options are properties, database, ldap
server.security.authstrategy=database
#server.security.properties.path=/opt/seurat/SeuratServer/users.txt

# If customer needs to download from /dataFiles without login, set the following option to true
server.datafiles.without.login=false

# Required file path options
#specify relative to ACAS_HOME without leading slash
#server.datafiles.relative_path=privateUploads
#server.tempfiles.relative_path=privateTempFiles
server.datafiles.relative_path=privateUploads
server.tempfiles.relative_path=privateTempFiles
# prefix for the client to prepend the fileValues to allow a user to download
client.datafiles.downloadurl.prefix=/dataFiles/
#Used to know location on server when sending from R to tomcat on separate server
#Normally {$ACAS_HOME}/${server.datafiles.relative_path}
server.service.persistence.filePath=/opt/acas_home/app/acas/privateUploads
server.service.persistence.fileUrl=http://host5.labsynch.com:3001/uploads

## ACAS Home Page Options
# If module is customized and the ACAS header name needs to be replaced, you can set the following options
client.moduleMenus.headerName=ACAS
client.moduleMenus.homePageMessage=Welcome to ACAS
client.moduleMenus.copyrightMessage=&copy; John McNeil & Company 2012-2015
# If summary statistics is an included feature, set the following to true
client.moduleMenus.summaryStats=true

client.leaveACASMessage=There are no unsaved changes.
client.scientistCodeOrigin=ACAS authors
client.roles.htsAdmin=admin
client.browser.enableSearchAll=true