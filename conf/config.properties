########################################################################
###          ACAS Configuration Properties    		                 ###
########################################################################


# How to read this file:
# SETTING-TYPE:
#	PLUMBING: Represents settings about Host names, ports, database names...etc
#  	BEHAVIOR: Represents settings that change the behavior of ACAS (Authentication, Allow protocol creation in SEL...etc.)
#  ON-THE-FLY:
#  	Settings marked as true in "ON-THE-FLY" do not require a server reboot
# OPTIONAL:
#	Settings marked as true in "OPTIONAL" are not required
# DEFAULT:
#	Optional Settings will have a default

# Note to developers adding new config values:
# The first part of the name, which is always "client" or "server", is used to filter which options are sent to
# the web client. Do not name config values starting with "client" unless they are safe for public viewing.

# Migration notes
# ACAS 1.2 -> 1.3
# name changes:
# client.require.getUserLink -> server.roologin.getUserLink
# client.require.changeLink -> server.roologin.changeLink
# client.require.resetLink -> server.roologin.resetLink
# client.require.loginLink -> server.roologin.loginLink
# New configuration additions with default values
# client.roologin.showpasswordchange=false
# server.service.persistence.filePath=${ACAS_HOME}/${server.datafiles.relative_path}
# server.service.persistence.fileUrl=${server.nodeapi.path}/uploads
# New for some installs: client.service.result.viewer.experimentNameColumn=EXPERIMENT_NAME


# Host that the client is running on.  It is recommended that you use the fully qualified domain name
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		FALSE
# DEFAULT:		NA
#
# Example: client.host=host4.labsynch.com
#
client.host=localhost

# Port that the client is running on.
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		FALSE
# DEFAULT:		NA
#
# Example: client.port=3000
#
client.port=3000

# If there are multiple instances running on a single server, it is recommended that each instances runs on a
# Different deploy mode
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		TRUE
# DEFAULT:		NA
#
# Example: client.deployMode=Dev
#
client.deployMode=Dev

#nodeapi.port must be different than client.port. It should be blocked by the server's firewall
server.nodeapi.port=3001
server.nodeapi.path=http://${client.host}:${server.nodeapi.port}

server.database.name=prod
server.database.username=acas
server.database.password=acas
server.log.level=DEBUG
client.service.persistence.path=acas
client.service.rapache.port=1080
server.rapache.listen=localhost
server.log.path=/tmp/rlog

client.include.project=FALSE
client.path=
client.use.ssl=false
server.ssl.key.file.path=../certs/server.key
server.ssl.cert.file.path=../certs/server.crt
server.ssl.cert.authority.file.path=../certs/ca.crt
server.ssl.cert.passphrase=selfCertForACASServer
client.service.persistence.host=host4.labsynch.com
client.service.persistence.port=8080
client.service.persistence.fullpath=http://${client.service.persistence.host}:${client.service.persistence.port}/${client.service.persistence.path}/
client.service.result.viewer.protocolPrefix=http://${client.service.persistence.host}:9080/seurat/runseurat?cmd=newjob&AssayName=
client.service.result.viewer.experimentPrefix=&AssayProtocol=
client.service.result.viewer.experimentNameColumn=EXPERIMENT_NAME
client.service.rapache.host=${client.service.persistence.host}
client.service.rapache.path=r-services-api
client.service.rapache.fullpath=http://${client.service.rapache.host}:${client.service.rapache.port}/${client.service.rapache.path}/

# Required for Roo-based authentication and user information services. All used in CustomerSpecificFunctions.coffee
server.roologin.getUserLink=${client.service.persistence.fullpath}authors/findbyname
server.roologin.changeLink=${client.service.persistence.fullpath}changepassword/update
server.roologin.resetLink=${client.service.persistence.fullpath}forgotpassword/update
server.roologin.loginLink=${client.service.persistence.fullpath}resources/j_spring_security_check
client.roologin.showpasswordchange=true

server.allow.protocol.creation.formats=Generic,Dose Response,Custom Example
server.database.driver=org.postgresql.Driver
server.database.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
server.database.host=${client.service.persistence.host}
server.database.port=5432
server.database.r.driver=PostgreSQL()
server.database.r.package=RPostgreSQL
server.database.url=jdbc:postgresql:${server.database.host}:${server.database.port}:${server.database.name}
server.delete.files.on.reload=false
server.projects.type=HardCoded
client.require.login=true
server.r.installation.path=
server.r=R
server.rscript=Rscript
server.service.external.file.type=blueimp
server.service.external.file.service.url=
client.service.external.preferred.batchid.type=LabSynchCmpdReg
server.service.external.preferred.batchid.url=http://${client.service.persistence.host}:8080/cmpdreg/metalots/corpName/
server.service.external.project.url=
server.service.external.report.registration.url=
server.service.external.user.authentication.url=
server.service.external.user.information.url=
server.service.external.logging.url=
client.service.rshiny.host=${client.service.persistence.host}
client.service.rshiny.path=fred
client.service.rshiny.port=3838
client.service.rshiny.fullpath=http://${client.service.rshiny.host}:${client.service.rshiny.port}/${client.service.rshiny.path}

## options are properties, database, ldap
server.security.authstrategy=database
#server.security.properties.path=/opt/seurat/SeuratServer/users.txt

# If customer needs to download from /dataFiles without login, set the following option to true
server.datafiles.without.login=false

# Required file path options
#specify relative to ACAS_HOME without leading slash
#server.datafiles.relative_path=privateUploads
#server.tempfiles.relative_path=privateTempFiles
server.datafiles.relative_path=privateUploads
server.tempfiles.relative_path=privateTempFiles
#Used to know location on server when sending from R to tomcat on separate server
#Normally {$ACAS_HOME}/${server.datafiles.relative_path}
server.service.persistence.filePath=/opt/acas_homes/acas/acas/privateUploads
server.service.persistence.fileUrl=http://host4.labsynch.com:3001/uploads



