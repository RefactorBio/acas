CREATE OR REPLACE VIEW acas.api_analysis_group_results_ld AS 
 (SELECT api_analysis_group_results.ag_id,
    api_analysis_group_results.ag_code_name,
    api_analysis_group_results.experiment_id,
    api_analysis_group_results.tested_lot,
    api_analysis_group_results.tested_conc,
    api_analysis_group_results.tested_conc_unit,
    api_analysis_group_results.agv_id,
    api_analysis_group_results.ls_type,
    CASE WHEN tested_conc >= 0 THEN ls_kind || ' @ ' || tested_conc || tested_conc_unit
	 ELSE ls_kind
    END as ls_kind,
    api_analysis_group_results.operator_kind,
    api_analysis_group_results.numeric_value,
    api_analysis_group_results.uncertainty,
    api_analysis_group_results.unit_kind,
    CASE WHEN ls_type = 'inlineFileValue' THEN '<img src=' || '''' || (SELECT prop_value FROM application_setting WHERE prop_name = 'url_prefix') || (SELECT prop_value FROM application_setting WHERE prop_name = 'host_name') || ':' || (SELECT prop_value FROM application_setting WHERE prop_name = 'acas_port') || (SELECT prop_value FROM application_setting WHERE prop_name = 'datafiles_url') || string_value || '''' || ' style=''width: '||(SELECT prop_value FROM application_setting WHERE prop_name = 'img_width')||'; height: '||(SELECT prop_value FROM application_setting WHERE prop_name = 'img_height')||';'' />'
	 ELSE string_value
    END as string_value,
    api_analysis_group_results.clob_value,
    api_analysis_group_results.comments,
    api_analysis_group_results.recorded_date,
    api_analysis_group_results.public_data
   FROM api_analysis_group_results
  WHERE api_analysis_group_results.public_data = true AND ls_kind != 'curve id')
  UNION
  (SELECT ag_id,
    ag_code_name,
    experiment_id,
    tested_lot,
    tested_conc,
    tested_conc_unit,
    agv_id,
    ls_type,
    ls_kind,
    operator_kind,
    numeric_value,
    uncertainty,
    unit_kind,
    '<img src=' || '''' || (SELECT prop_value FROM application_setting WHERE prop_name = 'url_prefix') || (SELECT prop_value FROM application_setting WHERE prop_name = 'host_name') || ':' || (SELECT prop_value FROM application_setting WHERE prop_name = 'racas_port') || (SELECT prop_value FROM application_setting WHERE prop_name = 'curve_render_url') || string_value || '''' || ' style=''width: '||(SELECT prop_value FROM application_setting WHERE prop_name = 'img_width')||'; height: '||(SELECT prop_value FROM application_setting WHERE prop_name = 'img_height')||';'' />' as string_value,
    clob_value,
    comments,
    recorded_date,
    public_data
   FROM api_aggregated_curves
  WHERE public_data = true
  )
  UNION
  (SELECT lot_props.lot_id as ag_id,
    lot_props.lot_corp_name as ag_code_name,
    -1 as experiment_id,
    lot_props.lot_corp_name as tested_lot,
    cast(NULL as double precision) as tested_conc,
    NULL as tested_conc_unit,
    lot_props.lot_id asagv_id,
    cast('stringValue' as character varying(64)) as ls_type,
    cast(lot_props.lot_property_name as character varying(64)) as ls_kind,
    cast(NULL as character varying(10)) as operator_kind,
    lot_property_numeric_value as numeric_value,
    cast(NULL as numeric(38,18)) as uncertainty,
    lot_property_units as unit_kind,
    lot_property_string_value as string_value,
    NULL as clob_value,
    cast(NULL as character varying(512)) as comments,
    cast(NULL as date) as recorded_date,
    TRUE as public_data
    from ((SELECT * FROM
		(SELECT lot_corp_name, lot_id,
		unnest(array[
		'Lot Synthesis Date',
		'Lot Notebook Page',
		'Lot Chemist',
		'Lot Purity Measured By',
		'Parent Stereo Category',
		'Lot Corp Name',
		'Lot Number',
		'Lot Barcode',
		'Lot Color',
		'Lot Salt Abbrev',
		'Lot Salt Equivalents',
		'Lot Amount',
		'Lot Amount Units',
		'Lot Solution Amount',
		'Lot Solution Amount Units',
		'Lot Supplier',
		'Lot Supplier ID',
		'Lot Purity',
		'Lot Purity Operator',
		'Lot Percent ee',
		'Lot Comments',
		'Lot Is Virtual',
		'Lot Physical State',
		'Lot Vendor',
		'Lot Retain',
		'Lot Retain Units',
		'Lot Melting Point',
		'Lot Boiling Point',
		'Lot Supplier Lot',
		'Project',
		'CAS Number',
		'Parent Corp Name',
		'Parent Stereo Comment',
		'Lot Mol. Weight',
		'Lot Registration Link',
		'Lot Analytical File',
		'Lot Registration Date',
		'Lot File Name',
		'Lot File Date'
		]) as lot_property_name,

		unnest(array[
		lot_synthesis_date::date::character varying,
		notebook_page,
		chemist,
		purity_measured_by,
		stereo_category,
		lot_corp_name,
		lot_number,
		barcode,
		color,
		salt_name,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		supplier,
		supplier_id,
		null::character varying,
		purity_operator,
		null::character varying,
		lot_comments,
		null::character varying,
		physical_state,
		vendor,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		supplier_lot,
		project,
		cas_number,
		parent_corp_name,
		stereo_comment,
		null::character varying,
		lot_page_link,
		analytical_file,
		lot_registration_date::date::character varying,
		file_name,
		file_date::date::character varying
		]) as lot_property_string_value,

		unnest(array[
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		salt_equivalents,
		amount,
		null::double precision,
		solution_amount,
		null::double precision,
		null::double precision,
		null::double precision,
		purity,
		null::double precision,
		percent_ee,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		retain,
		null::double precision,
		mp,
		bp,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		lot_mol_weight,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision,
		null::double precision
		]) as lot_property_numeric_value,

		unnest(array[
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		amount_units,
		null::character varying,
		solution_amount_units,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		retain_units,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying,
		null::character varying
		]) as lot_property_units
		FROM compound.api_lot_properties) as lot_props_pivot
		WHERE
		lot_property_string_value != '' OR 
		lot_property_numeric_value::character varying != '')) as lot_props)
;

ALTER TABLE acas.api_analysis_group_results_ld
  OWNER TO acas;
GRANT ALL ON TABLE acas.api_analysis_group_results_ld TO acas;
GRANT SELECT ON TABLE acas.api_analysis_group_results_ld TO seurat;